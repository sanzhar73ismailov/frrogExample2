name: Build and Tag Docker Image to Kdrl

on: [workflow_dispatch]
        
jobs:
  build-and-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3
        env:
          JF_URL: ${{ secrets.JF_URL2 }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN2 }}

      - name: set env
        run: echo "NOW=v$(date +'%Y%m%d.%H%M%S')" >> $GITHUB_ENV

      - name: Backend - Build Tag and push Docker Image
        env:
          IMAGE_NAME: kyndryl.jfrog.io/kyndryl-transformation-platform-dev-docker-local/jfrog-docker-example-backend:${{ env.NOW }}
          IMAGE_NAME_LATEST: kyndryl.jfrog.io/kyndryl-transformation-platform-dev-docker-local/jfrog-docker-example-backend:latest
        run: |
          jf docker build -t $IMAGE_NAME .
          jf docker tag $IMAGE_NAME $IMAGE_NAME_LATEST
          jf docker push $IMAGE_NAME
          jf docker push $IMAGE_NAME_LATEST
      - name: Frontend - Build Tag and push Docker Image
        env:
          IMAGE_NAME: kyndryl.jfrog.io/kyndryl-transformation-platform-dev-docker-local/jfrog-docker-example-frontend:${{ env.NOW }}
          IMAGE_NAME_LATEST: kyndryl.jfrog.io/kyndryl-transformation-platform-dev-docker-local/jfrog-docker-example-frontend:latest
        run: |
          jf docker build -t $IMAGE_NAME .
          jf docker tag $IMAGE_NAME $IMAGE_NAME_LATEST
          jf docker push $IMAGE_NAME
          jf docker push $IMAGE_NAME_LATEST 
          
      # - name: Publish Build info With JFrog CLI
      #   env:
      #     # Generated and maintained by GitHub
      #     JFROG_CLI_BUILD_NAME: jfrog-docker-build-example
      #     # JFrog organization secret
      #     JFROG_CLI_BUILD_NUMBER : ${{ github.run_number }}
      #   run: |
      #     # Export the build name and build nuber
      #     # Collect environment variables for the build
      #     jf rt build-collect-env
      #     # Collect VCS details from git and add them to the build
      #     jf rt build-add-git
      #     # Publish build info
      #     jf rt build-publish
